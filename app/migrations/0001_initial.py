# Generated by Django 2.2.13 on 2020-07-09 18:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BaseMenuIteam",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Имя")),
            ],
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={"verbose_name": "Корзина", "verbose_name_plural": "Корзины",},
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
            ],
            options={"verbose_name": "Заказ", "verbose_name_plural": "Заказы",},
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Имя")),
                (
                    "image",
                    models.ImageField(upload_to="img", verbose_name="Изображение"),
                ),
                ("text", models.TextField(verbose_name="Описание")),
            ],
            options={"verbose_name": "Продукт", "verbose_name_plural": "Продукты",},
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "basemenuiteam_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.BaseMenuIteam",
                    ),
                ),
            ],
            options={"verbose_name": "Категория", "verbose_name_plural": "Категории",},
            bases=("app.basemenuiteam",),
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=100, verbose_name="Кто оставил")),
                ("text", models.TextField(verbose_name="Текст отзыва")),
                ("rating", models.IntegerField(verbose_name="Рейтинг")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.Product",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={"verbose_name": "Обзор", "verbose_name_plural": "Обзоры",},
        ),
        migrations.CreateModel(
            name="OrderIteam",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count", models.IntegerField(default=1)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.Order"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ordering",
                        to="app.Product",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="order",
            name="products",
            field=models.ManyToManyField(
                through="app.OrderIteam",
                to="app.Product",
                verbose_name="Списко продуктов",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Заказчик",
            ),
        ),
        migrations.CreateModel(
            name="Menu",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "index",
                    models.IntegerField(default=0, verbose_name="Порядковый номер"),
                ),
                (
                    "content",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.BaseMenuIteam",
                        verbose_name="Содержимое",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пункт меню",
                "verbose_name_plural": "Меню",
                "ordering": ["index"],
            },
        ),
        migrations.CreateModel(
            name="Compilation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Заголовок")),
                ("text", models.CharField(max_length=100, verbose_name="Текст")),
                (
                    "create_date",
                    models.DateTimeField(auto_now=True, verbose_name="Дата создания"),
                ),
                (
                    "products",
                    models.ManyToManyField(to="app.Product", verbose_name="Товары"),
                ),
            ],
            options={"verbose_name": "Подборка", "verbose_name_plural": "Подборки",},
        ),
        migrations.CreateModel(
            name="CartIteam",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count", models.IntegerField(default=1)),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.Cart"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carter",
                        to="app.Product",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="cart",
            name="products",
            field=models.ManyToManyField(through="app.CartIteam", to="app.Product"),
        ),
        migrations.AddField(
            model_name="cart",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="app.Category",
                verbose_name="Категория",
            ),
        ),
        migrations.CreateModel(
            name="CategoryHub",
            fields=[
                (
                    "basemenuiteam_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="app.BaseMenuIteam",
                    ),
                ),
                (
                    "items",
                    models.ManyToManyField(
                        to="app.Category", verbose_name="Содержимое"
                    ),
                ),
            ],
            options={
                "verbose_name": "Группа меню",
                "verbose_name_plural": "Группы меню",
            },
            bases=("app.basemenuiteam",),
        ),
    ]
